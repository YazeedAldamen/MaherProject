@model AdminDashboard.Models.PackageModel
@{
    ViewData["Title"] = "Edit Blog";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="col-lg-9 col-md-12 px-4 mt-3">

    <h1>Edit / Delete Package</h1>
    <form asp-action="Edit" asp-controller="Packages" id="packageForm" class="row g-3 mt-5" enctype="multipart/form-data">
            <input type="hidden" asp-for="Id" name="Id" id="id"/>
        <div class="col-md-6">
            <label for="Name" class="form-label">@Html.DisplayNameFor(x=>x.Name):</label>
            <input asp-for="Name" class="form-control" name="Name" id="Name" oninput="validateForm()" />
        </div>
        <div class="col-md-2">
            <label for="Price" class="form-label">@Html.DisplayNameFor(x=>x.Price):</label>
            <input asp-for="Price" class="form-control" name="Price" id="Price" type="number" oninput="validateForm()" />
        </div>
        <div class="col-md-2">
            <label for="Discount" class="form-label">@Html.DisplayNameFor(x=>x.Discount):</label>
            <input asp-for="Discount" class="form-control" name="Discount" id="Discount" type="number" oninput="validateForm()" />
        </div>
        <div class="col-md-6">
            <label for="Description" class="form-label">@Html.DisplayNameFor(x=>x.Description):</label>
            <textarea asp-for="Description" class="form-control" id="Description" oninput="validateForm()"></textarea>
        </div>
        <div class="col-md-2">
            <label for="NumberOfDays" class="form-label">@Html.DisplayNameFor(x=>x.NumberOfDays):</label>
            <input asp-for="NumberOfDays" class="form-control" name="NumberOfDays" id="NumberOfDays" type="number" oninput="validateForm()" />
        </div>
        <div class="col-md-2">
            <label for="NumberOfNights" class="form-label">@Html.DisplayNameFor(x=>x.NumberOfNights):</label>
            <input asp-for="NumberOfNights" class="form-control" name="NumberOfNights" id="NumberOfNights" type="number" oninput="validateForm()" />
        </div>
        <div class="col-lg-4 mb-2">
            <label for="PackageTypeId" class="form-label">Package Type</label>
            @Html.DropDownListFor(c => c.PackageTypeId, (IEnumerable<SelectListItem>)ViewBag.PackageTypes,new{@class="form-control", @id="PackageTypeId", onchange="validateForm()"})

        </div>
        <div class="col-lg-4 mb-2">
            <label for="RoomClassId" class="form-label">Hotel Room Class</label>
            @Html.DropDownListFor(c => c.RoomClassId, (IEnumerable<SelectListItem>)ViewBag.RoomClass,new{@class="form-control", @id="RoomClassId", onchange="validateForm()"})
        </div>
        <div class="mb-3">
            <label for="formFile" class="form-label">Upload Main Image</label>
            <input asp-for="PackageMainImageFile" class="form-control" id="PackageMainImageFile" />
            @{
                if (Model.PackageMainImage != null)
                {
                    <img src="../../images/content/@Model.PackageMainImage" class="form_img" style="max-width:150px; max-height:150px;min-height:150px;max-height:150px" />
                }
            }
        </div>
        <div class="mb-3">
            <label for="formFileMultiple" class="form-label">Upload Multiple Images</label>
            <input asp-for="PackageImages" class="form-control" id="PackageImages" multiple onchange="limitAndHandleFileSelection(this, 5)" />
        </div>
        <div class="mb-12">
            <div class="row">
                @{

                    if (Model.ImageInfo.Any())
                    {

                        foreach (var image in Model.ImageInfo)
                        {
                        <div class="col mb-3">
                            <img src="../../images/content/@image.ImagePath" class="form_img" style="max-width:150px; max-height:150px;min-height:150px;max-height:150px" />
                        </div>
                        }
                    }
                }
            </div>
        </div>
       
        <h2>About The Package</h2>
        <div>
            <button class="btn1" style="border: none;" onclick="addDay(event)"><i class='bx bx-message-square-add'></i> Add Day</button>
            <h5 class="mt-4">Use a mark (//) to separate lines in the Description.</h5>
        </div>
        <div id="dayContainer">
            @{
                int dayCount = 1;
              
                foreach(var day in Model.PackageDays)
                {
                    string titleId = "day" + dayCount + "title";
                    string descriptionId = "day" + dayCount + "description";
                    string cityId = "cities" + dayCount;
                    string imageId = "day" + dayCount + "image";
                    <h5>Day @dayCount</h5>
                    <div class="col-md-4">
                        <label for="@titleId" class="form-label">Title</label>
                        <input type="text" class="form-control" id="@titleId" value="@day.Title" oninput="validateForm()">
                    </div>
                    <div class="col-md-6">
                        <label for="@descriptionId" class="form-label">Description</label>
                        <textarea type="text" class="form-control" id="@descriptionId" oninput="validateForm()">@day.Description</textarea>
                    </div>
                    <div class="col-md-2">
                        <label for="@cityId" class="form-label">City</label>
                        <select id="@cityId" class="form-select" onchange="validateForm()">
                            @foreach (var city in ViewBag.Cities)
                            {
                                if (city.Value == day.CityId.ToString())
                                {
                                    <option value="@city.Value" id="@cityId" selected>@city.Text</option>
                                }
                                else
                                {
                                    <option value="@city.Value" id="@cityId">@city.Text</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label for="day1image" class="form-label">Day Image</label>
                        <input type="file" class="form-control" id="@imageId" onchange="validateForm()">
                        <div class="col mb-3">
                            <img src="../../images/content/@day?.ImageName" class="form_img" style="max-width:150px; max-height:150px;min-height:150px;max-height:150px" />
                        </div>
                    </div>
                    dayCount++;
                
                }
            }
        </div>
        <div class="col-12">
            <label for="IsPublished" class="form-label">@Html.DisplayNameFor(x=>x.IsPublished):</label>
            <div class="col-sm-10">
                <div class="form-check">
                    <input asp-for="IsPublished" class="form-check-input" type="checkbox" name="IsPublished" id="IsPublished" checked="@Model.IsPublished" />
                </div>
            </div>
        </div>
        <div class="col-12">
            <button type="submit" class="btn btn-primary" id="submitButton">Submit</button>
            <a href="@Url.Action("Delete","Packages",new{Id=Model.Id})" class="btn btn-danger ms-3"> Delete</a>
        </div>
    </form>
</div>


<script>

    function limitFileSelection(input, maxCount) {
        if (input.files.length > maxCount) {
            input.value = "";
            alert("You can only upload a maximum of " + maxCount + " files");
        }
    }

    var dayCounter = @Model.PackageDays.Count + 1;
    function addDay(event) {
        event.preventDefault();
        var dayTitle = document.createElement("h5");
        dayTitle.textContent = "Day " + dayCounter;

        var titleDiv = document.createElement("div");
        titleDiv.classList.add("col-md-4");

        var titleLabel = document.createElement("label");
        titleLabel.classList.add("form-label");
        titleLabel.textContent = "Title";
        titleLabel.setAttribute("for", "day" + dayCounter + "title");
        titleDiv.appendChild(titleLabel);

        var titleInput = document.createElement("input");
        titleInput.type = "text";
        titleInput.classList.add("form-control");
        titleInput.id = "day" + dayCounter + "title";
        titleInput.addEventListener("input", validateForm);
        titleDiv.appendChild(titleInput);

        var descriptionDiv = document.createElement("div");
        descriptionDiv.classList.add("col-md-6");

        var descriptionLabel = document.createElement("label");
        descriptionLabel.classList.add("form-label");
        descriptionLabel.textContent = "Description";
        descriptionLabel.setAttribute("for", "day" + dayCounter + "description");
        descriptionDiv.appendChild(descriptionLabel);

        var descriptionTextarea = document.createElement("textarea");
        descriptionTextarea.type = "text";
        descriptionTextarea.classList.add("form-control");
        descriptionTextarea.id = "day" + dayCounter + "description";
        descriptionTextarea.addEventListener("input", validateForm);
        descriptionDiv.appendChild(descriptionTextarea);

    @{
        var citiesJson = Json.Serialize(ViewBag.Cities);
    }
            var cityLable = document.createElement("label");
        cityLable.classList.add("form-label");
        cityLable.textContent = "City";
        cityLable.setAttribute("for", "cities" + dayCounter);
        var citiesDiv = document.createElement("div");
        citiesDiv.classList.add("col-md-2");
        var selectList = document.createElement("select");
        selectList.id = "cities" + dayCounter;
        selectList.classList.add("form-select");
        selectList.addEventListener("change", validateForm);


        var cities = @Html.Raw(citiesJson);
        for (var i = 0; i < cities.length; i++) {
            var option = document.createElement("option");
            option.value = cities[i].value;
            option.text = cities[i].text;
            option.id = "city" + dayCounter;
            selectList.appendChild(option);
        }
        citiesDiv.appendChild(cityLable);
        citiesDiv.appendChild(selectList);


        var imageLable = document.createElement("label");
        imageLable.classList.add("form-label");
        imageLable.textContent = "Day Image";
        imageLable.setAttribute("for", "day" + dayCounter + "image");
        var imageDiv = document.createElement("div");
        imageDiv.classList.add("col-md-4");
        var imageInput = document.createElement("input");
        imageInput.type = "file";
        imageInput.classList.add("form-control");
        imageInput.id = "day" + dayCounter + "image";
        imageInput.addEventListener("change", validateForm);
        imageDiv.appendChild(imageLable);
        imageDiv.appendChild(imageInput);


        var dayContainer = document.getElementById("dayContainer");
        dayContainer.appendChild(dayTitle);
        dayContainer.appendChild(titleDiv);
        dayContainer.appendChild(descriptionDiv);
        dayContainer.appendChild(citiesDiv);
        dayContainer.appendChild(imageDiv);

        dayCounter++;

        var submitBtn = document.getElementById('submitButton');
        submitBtn.disabled = true;
    }

    
    function getDaysData() {
        event.preventDefault();
        var days = [];
        var daysImages = [];

        for (var i = 1; i < dayCounter; i++) {
            var titleElement = document.getElementById("day" + i + "title");
            var descriptionElement = document.getElementById("day" + i + "description");
            var cityElement = document.getElementById("cities" + i);

            if (titleElement && descriptionElement && cityElement) {
                var imageInput = document.getElementById("day" + i + "image");
                var imageName = getImageName(imageInput);
                var day = {
                    Title: titleElement.value,
                    Description: descriptionElement.value,
                    CityId: cityElement.value,
                    ImageName: imageName
                };
                days.push(day);
                daysImages.push(imageInput.files.length > 0 ? imageInput.files[0] : new File([], "noFile"));

            } else {
                console.error("One or more elements not found for day " + i);
            }
        }

        return { days, daysImages };
    }
    function getImageName(input) {
        var file = input.files[0];
        var imageName = file ? file.name : "";
        return imageName;
    }


    document.getElementById("submitButton").addEventListener("click", function () {
        document.getElementById("AboutPackage").value = JSON.stringify(getDaysData());
    });

    function limitAndHandleFileSelection(input, maxCount) {
        limitFileSelection(input, maxCount);

        var files = input.files;

        var imageArray = [];

        for (var i = 0; i < files.length; i++) {
            var file = files[i];

            var imageObject = {
                fileName: file.name,
                fileSize: file.size,
                fileType: file.type
            };

            imageArray.push(imageObject);
        }
    }

    function limitFileSelection(input, maxCount) {
        if (input.files.length > maxCount) {
            input.value = "";
            alert("You can only upload a maximum of " + maxCount + " files");
        }
    }

    function dynamicDaysValidation() {
       
        try {
            for (var i = 1; i < dayCounter; i++) {
                var daytitle = document.getElementById('day' + i.toString() + 'title').value;
                var daydescription = document.getElementById('day' + i.toString() + 'description').value;
                var daycity = document.getElementById('cities' + i.toString()).value;

                if (daytitle.trim() === '' || daydescription.trim() === '' || daycity === '0') {

                    return true;
                }
            }
        }
        catch (e) {
            console.log(e);
            return false;
        }
        return false;
    }

</script>

<script>

    document.getElementById("submitButton").addEventListener("click", function (event) {
        event.preventDefault();

        var endpoint = "/Packages/Edit";

        var formData = new FormData(document.getElementById('packageForm'));
        var daysData = getDaysData();
        formData.append("AboutPackage", JSON.stringify(daysData.days));
        for (var i = 0; i < daysData.daysImages.length; i++) {
            formData.append("AboutPackageImages", daysData.daysImages[i]);
        }
        fetch(endpoint, {
            method: 'PUT',
            body: formData,
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                window.location.href = "@Url.Action("Index","Packages")";
                return response.json();
            })
            .then(data => {
                console.log(data);
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
            });
    });
</script>
<script>
    function validateForm() {
        var name = document.getElementById('Name').value;
        var price = document.getElementById('Price').value;
        var discount = document.getElementById('Discount').value;
        var description = document.getElementById('Description').value;
        var numberOfDays = document.getElementById('NumberOfDays').value;
        var numberOfNights = document.getElementById('NumberOfNights').value;
        var packageTypeId = document.getElementById('PackageTypeId').value;
        var roomClassId = document.getElementById('RoomClassId').value;
       




        var submitBtn = document.getElementById('submitButton');

        if (name.trim() !== ''
            && price !== 0
            && discount !== 0
            && description !== ''
            && numberOfDays !== 0
            && numberOfNights !== 0
            && packageTypeId !== '0'
            && roomClassId !== '0'
        ) {
            var isDisabled = dynamicDaysValidation();
            console.log("disabled " + isDisabled);
            if (isDisabled) {
                // give the submit button the disabled attribute
                submitBtn.disabled = true;
            }
            else {
                submitBtn.disabled = false;
            }
        } else {
            submitBtn.disabled = true;
        }


    }

</script>